================================(1/2)================================
module <constructor>gacuisrc_unittest::MainWindow;
using presentation::controls::Gui*;
using presentation::elements::Gui*Element;
using presentation::compositions::Gui*Composition;
using presentation::compositions::Gui*;
using presentation::templates::Gui*;
using system::*;
using system::reflection::*;
using presentation::*;
using presentation::Gui*;
using presentation::controls::*;
using presentation::controls::list::*;
using presentation::controls::tree::*;
using presentation::elements::*;
using presentation::elements::Gui*;
using presentation::elements::text::*;
using presentation::compositions::*;
using presentation::templates::*;
using presentation::theme::*;

namespace gacuisrc_unittest
{
    class MainWindowConstructor
    {
        @cpp:Protected
        var self : ::gacuisrc_unittest::MainWindow* = null of (::gacuisrc_unittest::MainWindow*);

        @cpp:Protected
        var <precompile>0 : ::presentation::controls::GuiToolstripGroupContainer* = null of (::presentation::controls::GuiToolstripGroupContainer*);

        @cpp:Protected
        var <precompile>1 : ::presentation::controls::GuiToolstripGroup* = null of (::presentation::controls::GuiToolstripGroup*);

        @cpp:Protected
        var <precompile>2 : ::presentation::controls::GuiToolstripGroup* = null of (::presentation::controls::GuiToolstripGroup*);

        @cpp:Protected
        var <precompile>3 : ::presentation::controls::GuiToolstripGroup* = null of (::presentation::controls::GuiToolstripGroup*);

        @cpp:Protected
        var <precompile>4 : ::presentation::compositions::GuiBoundsComposition* = null of (::presentation::compositions::GuiBoundsComposition*);

        @cpp:Protected
        var <precompile>5 : ::presentation::compositions::GuiGraphicsComposition* = null of (::presentation::compositions::GuiGraphicsComposition*);

        @cpp:Protected
        var <precompile>6 : ::presentation::compositions::GuiGraphicsComposition* = null of (::presentation::compositions::GuiGraphicsComposition*);

        @cpp:Protected
        var <precompile>7 : ::presentation::compositions::GuiBoundsComposition* = null of (::presentation::compositions::GuiBoundsComposition*);

        @cpp:Protected
        var tab : ::presentation::controls::GuiRibbonTab* = null of (::presentation::controls::GuiRibbonTab*);

        @cpp:Protected
        var tabPageOptions : ::presentation::controls::GuiRibbonTabPage* = null of (::presentation::controls::GuiRibbonTabPage*);

        @cpp:Protected
        var tabPageLabel : ::presentation::controls::GuiRibbonTabPage* = null of (::presentation::controls::GuiRibbonTabPage*);

        @cpp:Protected
        var commandUndo : ::presentation::controls::GuiToolstripCommand* = null of (::presentation::controls::GuiToolstripCommand*);

        @cpp:Protected
        var commandRedo : ::presentation::controls::GuiToolstripCommand* = null of (::presentation::controls::GuiToolstripCommand*);

        @cpp:Protected
        var commandCut : ::presentation::controls::GuiToolstripCommand* = null of (::presentation::controls::GuiToolstripCommand*);

        @cpp:Protected
        var commandCopy : ::presentation::controls::GuiToolstripCommand* = null of (::presentation::controls::GuiToolstripCommand*);

        @cpp:Protected
        var commandPaste : ::presentation::controls::GuiToolstripCommand* = null of (::presentation::controls::GuiToolstripCommand*);

        @cpp:Protected
        var commandDelete : ::presentation::controls::GuiToolstripCommand* = null of (::presentation::controls::GuiToolstripCommand*);

        @cpp:Protected
        var ribbonMenu : ::presentation::controls::GuiRibbonToolstripMenu* = null of (::presentation::controls::GuiRibbonToolstripMenu*);

        @cpp:Protected
        var buttonUndo : ::presentation::controls::GuiToolstripButton* = null of (::presentation::controls::GuiToolstripButton*);

        @cpp:Protected
        var buttonRedo : ::presentation::controls::GuiToolstripButton* = null of (::presentation::controls::GuiToolstripButton*);

        @cpp:Protected
        var buttonCut : ::presentation::controls::GuiToolstripButton* = null of (::presentation::controls::GuiToolstripButton*);

        @cpp:Protected
        var buttonCopy : ::presentation::controls::GuiToolstripButton* = null of (::presentation::controls::GuiToolstripButton*);

        @cpp:Protected
        var buttonPaste : ::presentation::controls::GuiToolstripButton* = null of (::presentation::controls::GuiToolstripButton*);

        @cpp:Protected
        var buttonDelete : ::presentation::controls::GuiToolstripButton* = null of (::presentation::controls::GuiToolstripButton*);

        @cpp:Protected
        var buttonHome : ::presentation::controls::GuiButton* = null of (::presentation::controls::GuiButton*);

        @cpp:Protected
        func <gacuisrc_unittest-MainWindow>Initialize(<this> : ::gacuisrc_unittest::MainWindow*) : (::system::Void)
        {
            (self = <this>);
            {
                (self.ClientSize = {x : 320; y : 320;} of (::presentation::Size));
            }
            {
                (self.Text = "GuiRibbonTab");
            }
            (commandUndo = new (::presentation::controls::GuiToolstripCommand*)());
            <this>.SetNamedObject("commandUndo", commandUndo);
            {
                (commandUndo.Text = "Undo");
            }
            {
                self.AddComponent(commandUndo);
            }
            (commandRedo = new (::presentation::controls::GuiToolstripCommand*)());
            <this>.SetNamedObject("commandRedo", commandRedo);
            {
                (commandRedo.Text = "Redo");
            }
            {
                self.AddComponent(commandRedo);
            }
            (commandCut = new (::presentation::controls::GuiToolstripCommand*)());
            <this>.SetNamedObject("commandCut", commandCut);
            {
                (commandCut.Enabled = false);
            }
            {
                (commandCut.Text = "Cut");
            }
            {
                self.AddComponent(commandCut);
            }
            (commandCopy = new (::presentation::controls::GuiToolstripCommand*)());
            <this>.SetNamedObject("commandCopy", commandCopy);
            {
                (commandCopy.Enabled = false);
            }
            {
                (commandCopy.Text = "Copy");
            }
            {
                self.AddComponent(commandCopy);
            }
            (commandPaste = new (::presentation::controls::GuiToolstripCommand*)());
            <this>.SetNamedObject("commandPaste", commandPaste);
            {
                (commandPaste.Enabled = false);
            }
            {
                (commandPaste.Text = "Paste");
            }
            {
                self.AddComponent(commandPaste);
            }
            (commandDelete = new (::presentation::controls::GuiToolstripCommand*)());
            <this>.SetNamedObject("commandDelete", commandDelete);
            {
                (commandDelete.Enabled = false);
            }
            {
                (commandDelete.Text = "Delete");
            }
            {
                self.AddComponent(commandDelete);
            }
            {
                (ribbonMenu = new (::presentation::controls::GuiRibbonToolstripMenu*)(::presentation::theme::ThemeName::RibbonToolstripMenu, null));
                <this>.SetNamedObject("ribbonMenu", ribbonMenu);
            }
            {
                (<precompile>0 = new (::presentation::controls::GuiToolstripGroupContainer*)(::presentation::theme::ThemeName::CustomControl));
            }
            {
                (<precompile>1 = new (::presentation::controls::GuiToolstripGroup*)(::presentation::theme::ThemeName::CustomControl));
            }
            {
                (buttonUndo = new (::presentation::controls::GuiToolstripButton*)(::presentation::theme::ThemeName::MenuItemButton));
                <this>.SetNamedObject("buttonUndo", buttonUndo);
            }
            {
                (buttonUndo.Alt = "U");
            }
            {
                <precompile>1.ToolstripItems.Add(buttonUndo);
            }
            {
                (buttonRedo = new (::presentation::controls::GuiToolstripButton*)(::presentation::theme::ThemeName::MenuItemButton));
                <this>.SetNamedObject("buttonRedo", buttonRedo);
            }
            {
                (buttonRedo.Alt = "R");
            }
            {
                <precompile>1.ToolstripItems.Add(buttonRedo);
            }
            {
                <precompile>0.ToolstripItems.Add(<precompile>1);
            }
            {
                (<precompile>2 = new (::presentation::controls::GuiToolstripGroup*)(::presentation::theme::ThemeName::CustomControl));
            }
            {
                (buttonCut = new (::presentation::controls::GuiToolstripButton*)(::presentation::theme::ThemeName::MenuItemButton));
                <this>.SetNamedObject("buttonCut", buttonCut);
            }
            {
                (buttonCut.Alt = "X");
            }
            {
                <precompile>2.ToolstripItems.Add(buttonCut);
            }
            {
                (buttonCopy = new (::presentation::controls::GuiToolstripButton*)(::presentation::theme::ThemeName::MenuItemButton));
                <this>.SetNamedObject("buttonCopy", buttonCopy);
            }
            {
                (buttonCopy.Alt = "C");
            }
            {
                <precompile>2.ToolstripItems.Add(buttonCopy);
            }
            {
                (buttonPaste = new (::presentation::controls::GuiToolstripButton*)(::presentation::theme::ThemeName::MenuItemButton));
                <this>.SetNamedObject("buttonPaste", buttonPaste);
            }
            {
                (buttonPaste.Alt = "V");
            }
            {
                <precompile>2.ToolstripItems.Add(buttonPaste);
            }
            {
                <precompile>0.ToolstripItems.Add(<precompile>2);
            }
            {
                (<precompile>3 = new (::presentation::controls::GuiToolstripGroup*)(::presentation::theme::ThemeName::CustomControl));
            }
            {
                (buttonDelete = new (::presentation::controls::GuiToolstripButton*)(::presentation::theme::ThemeName::MenuItemButton));
                <this>.SetNamedObject("buttonDelete", buttonDelete);
            }
            {
                (buttonDelete.Alt = "D");
            }
            {
                <precompile>3.ToolstripItems.Add(buttonDelete);
            }
            {
                <precompile>0.ToolstripItems.Add(<precompile>3);
            }
            {
                ribbonMenu.ToolstripItems.Add(<precompile>0);
            }
            {
                self.AddControlHostComponent(ribbonMenu);
            }
            {
                (tab = new (::presentation::controls::GuiRibbonTab*)(::presentation::theme::ThemeName::RibbonTab));
                <this>.SetNamedObject("tab", tab);
            }
            (<precompile>6 = tab.BeforeHeaders);
            {
                (buttonHome = new (::presentation::controls::GuiButton*)(::presentation::theme::ThemeName::Button));
                <this>.SetNamedObject("buttonHome", buttonHome);
            }
            (<precompile>7 = buttonHome.BoundsComposition);
            {
                (<precompile>7.AlignmentToParent = {left : 0; top : 0; right : 0; bottom : 0;} of (::presentation::Margin));
            }
            {
                (buttonHome.Text = "HOME");
            }
            {
                <precompile>6.AddChild(buttonHome.BoundsComposition);
            }
            {
                (tabPageOptions = new (::presentation::controls::GuiRibbonTabPage*)(::presentation::theme::ThemeName::CustomControl));
                <this>.SetNamedObject("tabPageOptions", tabPageOptions);
            }
            (<precompile>5 = tabPageOptions.ContainerComposition);
            {
                (<precompile>5.PreferredMinSize = {y : 110;} of (::presentation::Size));
            }
            {
                (tabPageOptions.Text = "Options");
            }
            {
                var <collection> = tab.Pages;
                <collection>.Add(tabPageOptions);
            }
            {
                (tabPageLabel = new (::presentation::controls::GuiRibbonTabPage*)(::presentation::theme::ThemeName::CustomControl));
                <this>.SetNamedObject("tabPageLabel", tabPageLabel);
            }
            {
                (tabPageLabel.Highlighted = true);
            }
            {
                (tabPageLabel.Text = "Label");
            }
            {
                var <collection> = tab.Pages;
                <collection>.Add(tabPageLabel);
            }
            (<precompile>4 = tab.BoundsComposition);
            {
                (<precompile>4.AlignmentToParent = {left : 0; top : 5; right : 0; bottom : (-1);} of (::presentation::Margin));
            }
            {
                self.AddChild(tab);
            }
            {
                (commandUndo.Image = (cast (::presentation::GuiImageData^) <this>.ResolveResource("res", "ToolstripImages/Undo", true)));
            }
            {
                (commandRedo.Image = (cast (::presentation::GuiImageData^) <this>.ResolveResource("res", "ToolstripImages/Redo", true)));
            }
            {
                (commandCut.Image = (cast (::presentation::GuiImageData^) <this>.ResolveResource("res", "ToolstripImages/Cut", true)));
            }
            {
                (commandCopy.Image = (cast (::presentation::GuiImageData^) <this>.ResolveResource("res", "ToolstripImages/Copy", true)));
            }
            {
                (commandPaste.Image = (cast (::presentation::GuiImageData^) <this>.ResolveResource("res", "ToolstripImages/Paste", true)));
            }
            {
                (commandDelete.Image = (cast (::presentation::GuiImageData^) <this>.ResolveResource("res", "ToolstripImages/Delete", true)));
            }
            {
                (buttonUndo.Command = commandUndo);
            }
            {
                (buttonRedo.Command = commandRedo);
            }
            {
                (buttonCut.Command = commandCut);
            }
            {
                (buttonCopy.Command = commandCopy);
            }
            {
                (buttonPaste.Command = commandPaste);
            }
            {
                (buttonDelete.Command = commandDelete);
            }
            {
                var <event-handler> = func (sender : ::presentation::compositions::GuiGraphicsComposition*, arguments : ::presentation::compositions::GuiEventArgs*) : (::system::Void)
                {
                    ribbonMenu.ShowPopup(buttonHome, true);
                };
                attach(buttonHome.Clicked, <event-handler>);
            }
        }

        new ()
        {
        }
    }
}

================================(2/2)================================
module <instance>gacuisrc_unittest::MainWindow;
using presentation::controls::Gui*;
using presentation::elements::Gui*Element;
using presentation::compositions::Gui*Composition;
using presentation::compositions::Gui*;
using presentation::templates::Gui*;
using system::*;
using system::reflection::*;
using presentation::*;
using presentation::Gui*;
using presentation::controls::*;
using presentation::controls::list::*;
using presentation::controls::tree::*;
using presentation::elements::*;
using presentation::elements::Gui*;
using presentation::elements::text::*;
using presentation::compositions::*;
using presentation::templates::*;
using presentation::theme::*;

namespace gacuisrc_unittest
{
    @cpp:File("MainWindow")
    @cpp:Friend(typeof(MainWindowConstructor))
    class MainWindow : ::presentation::controls::GuiWindow, MainWindowConstructor
    {
        new* ()
            :::presentation::controls::GuiWindow(::presentation::theme::ThemeName::Window)
        {
            var <resource> = ::presentation::IGuiResourceManager::GetResourceManager().GetResourceFromClassName("gacuisrc_unittest::MainWindow");
            var <resolver> = new (::presentation::GuiResourcePathResolver^)(<resource>, <resource>.WorkingDirectory);
            this.SetResourceResolver(<resolver>);
            this.<gacuisrc_unittest-MainWindow>Initialize(this);
        }

        delete
        {
            FinalizeInstanceRecursively(this of (::presentation::controls::GuiControlHost*));
        }
    }
}

