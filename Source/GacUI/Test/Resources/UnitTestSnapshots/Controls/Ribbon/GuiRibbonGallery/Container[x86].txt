================================(1/2)================================
module <constructor>gacuisrc_unittest::MainWindow;
using presentation::controls::Gui*;
using presentation::elements::Gui*Element;
using presentation::compositions::Gui*Composition;
using presentation::compositions::Gui*;
using presentation::templates::Gui*;
using system::*;
using system::reflection::*;
using presentation::*;
using presentation::Gui*;
using presentation::controls::*;
using presentation::controls::list::*;
using presentation::controls::tree::*;
using presentation::elements::*;
using presentation::elements::Gui*;
using presentation::elements::text::*;
using presentation::compositions::*;
using presentation::templates::*;
using presentation::theme::*;

namespace gacuisrc_unittest
{
    class MainWindowConstructor
    {
        @cpp:Protected
        var self : ::gacuisrc_unittest::MainWindow* = null of (::gacuisrc_unittest::MainWindow*);

        @cpp:Protected
        var <precompile>0 : ::presentation::compositions::GuiBoundsComposition* = null of (::presentation::compositions::GuiBoundsComposition*);

        @cpp:Protected
        var <precompile>1 : ::presentation::compositions::GuiGraphicsComposition* = null of (::presentation::compositions::GuiGraphicsComposition*);

        @cpp:Protected
        var <precompile>2 : ::presentation::compositions::GuiBoundsComposition* = null of (::presentation::compositions::GuiBoundsComposition*);

        @cpp:Protected
        var <precompile>3 : ::presentation::compositions::GuiBoundsComposition* = null of (::presentation::compositions::GuiBoundsComposition*);

        @cpp:Protected
        var button : ::presentation::controls::GuiButton* = null of (::presentation::controls::GuiButton*);

        @cpp:Protected
        var tab : ::presentation::controls::GuiRibbonTab* = null of (::presentation::controls::GuiRibbonTab*);

        @cpp:Protected
        var group1 : ::presentation::controls::GuiRibbonGroup* = null of (::presentation::controls::GuiRibbonGroup*);

        @cpp:Protected
        var gallery : ::presentation::controls::GuiRibbonGallery* = null of (::presentation::controls::GuiRibbonGallery*);

        @cpp:Protected
        var tabPageContainer : ::presentation::controls::GuiRibbonTabPage* = null of (::presentation::controls::GuiRibbonTabPage*);

        @cpp:Protected
        func <gacuisrc_unittest-MainWindow>Initialize(<this> : ::gacuisrc_unittest::MainWindow*) : (::system::Void)
        {
            (self = <this>);
            {
                (self.ClientSize = {x : 480; y : 320;} of (::presentation::Size));
            }
            {
                (self.Text = "GuiRibbonGallery");
            }
            {
                (tab = new (::presentation::controls::GuiRibbonTab*)(::presentation::theme::ThemeName::RibbonTab));
                <this>.SetNamedObject("tab", tab);
            }
            {
                (tabPageContainer = new (::presentation::controls::GuiRibbonTabPage*)(::presentation::theme::ThemeName::CustomControl));
                <this>.SetNamedObject("tabPageContainer", tabPageContainer);
            }
            {
                (group1 = new (::presentation::controls::GuiRibbonGroup*)(::presentation::theme::ThemeName::RibbonGroup));
                <this>.SetNamedObject("group1", group1);
            }
            {
                (gallery = new (::presentation::controls::GuiRibbonGallery*)(::presentation::theme::ThemeName::RibbonGallery));
                <this>.SetNamedObject("gallery", gallery);
            }
            (<precompile>3 = gallery.BoundsComposition);
            {
                (<precompile>3.PreferredMinSize = {x : 200;} of (::presentation::Size));
            }
            {
                (button = new (::presentation::controls::GuiButton*)(::presentation::theme::ThemeName::Button));
                <this>.SetNamedObject("button", button);
            }
            (<precompile>2 = button.BoundsComposition);
            {
                (<precompile>2.AlignmentToParent = {left : 5; top : 5; right : 5; bottom : 5;} of (::presentation::Margin));
            }
            {
                (button.Text = "Click me!");
            }
            {
                gallery.AddChild(button);
            }
            {
                var <collection> = group1.Items;
                <collection>.Add(gallery);
            }
            {
                (group1.Expandable = true);
            }
            {
                (group1.Text = "Gallery");
            }
            {
                var <collection> = tabPageContainer.Groups;
                <collection>.Add(group1);
            }
            (<precompile>1 = tabPageContainer.ContainerComposition);
            {
                (<precompile>1.PreferredMinSize = {y : 110;} of (::presentation::Size));
            }
            {
                (tabPageContainer.Text = "Container");
            }
            {
                var <collection> = tab.Pages;
                <collection>.Add(tabPageContainer);
            }
            (<precompile>0 = tab.BoundsComposition);
            {
                (<precompile>0.AlignmentToParent = {left : 0; top : 5; right : 0; bottom : (-1);} of (::presentation::Margin));
            }
            {
                self.AddChild(tab);
            }
            {
                (group1.LargeImage = (cast (::presentation::GuiImageData^) <this>.ResolveResource("res", "ListViewImages/LargeImages/Cert", true)));
            }
            {
                var <event-handler> = func (sender : ::presentation::compositions::GuiGraphicsComposition*, arguments : ::presentation::compositions::GuiEventArgs*) : (::system::Void)
                {
                    (self.Text = "Clicked!");
                };
                attach(button.Clicked, <event-handler>);
            }
        }

        new ()
        {
        }
    }
}

================================(2/2)================================
module <instance>gacuisrc_unittest::MainWindow;
using presentation::controls::Gui*;
using presentation::elements::Gui*Element;
using presentation::compositions::Gui*Composition;
using presentation::compositions::Gui*;
using presentation::templates::Gui*;
using system::*;
using system::reflection::*;
using presentation::*;
using presentation::Gui*;
using presentation::controls::*;
using presentation::controls::list::*;
using presentation::controls::tree::*;
using presentation::elements::*;
using presentation::elements::Gui*;
using presentation::elements::text::*;
using presentation::compositions::*;
using presentation::templates::*;
using presentation::theme::*;

namespace gacuisrc_unittest
{
    @cpp:File("MainWindow")
    @cpp:Friend(typeof(MainWindowConstructor))
    class MainWindow : ::presentation::controls::GuiWindow, MainWindowConstructor
    {
        new* ()
            :::presentation::controls::GuiWindow(::presentation::theme::ThemeName::Window)
        {
            var <resource> = ::presentation::IGuiResourceManager::GetResourceManager().GetResourceFromClassName("gacuisrc_unittest::MainWindow");
            var <resolver> = new (::presentation::GuiResourcePathResolver^)(<resource>, <resource>.WorkingDirectory);
            this.SetResourceResolver(<resolver>);
            this.<gacuisrc_unittest-MainWindow>Initialize(this);
        }

        delete
        {
            FinalizeInstanceRecursively(this of (::presentation::controls::GuiControlHost*));
        }
    }
}

